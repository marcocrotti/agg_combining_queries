
// Parameters

params {
    // HPC configuration
    executor            = 'lsf'
    cache               = 'lenient'
    queue               = { task.attempt < 2 ? 'short' : 'medium' }
    cpus                = { 1 + (task.attempt - 1) }
    memory              = { 1.GB + (1.GB * (task.attempt - 1)) }
    cluster_options     = '-P Bio'
    error_strategy      = { task.exitStatus in [130, 137, 139] ? 'retry' : 'finish' }
    max_retries         = 3
    queue_size          = 5000
    poll_interval       = '30 sec'
    exit_read_timeout   = '30 sec'
    debug               = true

    // input options
    input_bed = "${projectDir}/input/input_genes.bed"
    agg_chunks_bed = '/gel_data_resources/main_programme/aggregation/aggregate_gVCF_strelka/aggV2/additional_data/chunk_names/aggV2_chunk_names.bed'
    severity_scale = null
    severity = null
    include_exclude = '-i'
    expression = 'GT="AA"'
    format = '[%SAMPLE\t%CHROM\t%POS\t%REF\t%ALT\n]'
    outdir = 'results'

    // Containers
    linux_container     = 'docker-remote.artifactory.aws.gel.ac/ubuntu:20.04'
	bedtools_container  = 'docker-quay-io.artifactory.aws.gel.ac/mcrotti1/bedtools:latest'
    bcftools_container  = 'docker-quay-io.artifactory.aws.gel.ac/mcrotti1/bcftools:latest'
    python_container    = 'docker-quay-io.artifactory.aws.gel.ac/kenhanscombe/amd64-python-slim:3.10.5'
    pandas_container    = 'docker-quay-io.artifactory.aws.gel.ac/mcrotti1/python:3.10.5'

    // Singularity options
    singularity_enabled     = true
    singularity_auto_mounts = true
    singularity_cache       = 'singularity'
    singularity_run_options = """\
        --bind /resources:/resources \
        --bind /nas/weka.gel.zone/resources:/nas/weka.gel.zone/resources \
        --bind /pgen_int_work:/pgen_int_work \
        --bind /nas/weka.gel.zone/pgen_int_work:/nas/weka.gel.zone/pgen_int_work \
        --bind /public_data_resources:/public_data_resources \
        --bind /nas/weka.gel.zone/pgen_public_data_resources:/nas/weka.gel.zone/pgen_public_data_resources \
        --bind /nas/weka.gel.zone/home:/nas/weka.gel.zone/home \
        --bind /home:/home --bind /gel_data_resources:/gel_data_resources \
        --bind /re_scratch:/re_scratch \
        --bind /nas/weka.gel.zone/re_scratch:/nas/weka.gel.zone/re_scratch \
        --bind /genomes:/genomes \
        --bind /nas/weka.gel.zone/pgen_genomes:/nas/weka.gel.zone/pgen_genomes \
        --bind /re_gecip:/re_gecip \
        --bind /nas/weka.gel.zone/re_gecip:/nas/weka.gel.zone/re_gecip \
        --bind /discovery_forum:/discovery_forum \
        --bind /nas/weka.gel.zone/discovery_forum:/nas/weka.gel.zone/discovery_forum \
        --bind /nas/weka.gel.zone/pgen_analysis:/nas/weka.gel.zone/pgen_analysis \
        --bind /genomes-bertha-prod:/genomes-bertha-prod \
        --bind /genomes/bertha-prod:/genomes/bertha-prod""".stripIndent()

}

singularity {
    enabled     = params.singularity_enabled
    autoMounts  = params.singularity_auto_mounts
    cacheDir    = params.singularity_cache
    runOptions  = params.singularity_run_options
}

executor {
    name            = params.executor
    queueSize       = params.queue_size
    pollInterval    = params.poll_interval
    exitReadTimeout = params.exit_read_timeout
}


process {
    container       = params.linux_container
    errorStrategy   = params.error_strategy
    maxRetries      = params.max_retries
    cpus            = params.cpus
    queue           = params.queue
    memory          = params.memory
    cache           = params.cache
    clusterOptions  = params.cluster_options
    debug           = params.debug


    withName: FIND_CHUNK {
        container = params.bedtools_container
    }

    withName: EXTRACT_VARIANT_VEP {
        container = params.bcftools_container
    }
  
    withName: INTERSECT_ANNOTATION_GENOTYPE_VCF {
        container = params.bcftools_container
    }

    withName: FIND_SAMPLES {
        container = params.bcftools_container
    }

    withName: SUMMARISE_OUTPUT {
        container = params.pandas_container
    }

	withName: DUMP_VERSIONS {
        container = params.python_container
    }

}

